{"ast":null,"code":"import socketClient from 'socket.io-client';\nlet socket;\nlet messagePool = [];\nconst ENDPOINT = \"http://127.0.0.1:3001\";\nexport const initiateSocket = room => {\n  socket = socketClient(ENDPOINT);\n\n  if (room && socket) {\n    socket.emit(\"joinRoom\", room);\n  }\n};\nexport const disconnectSocket = () => {\n  console.log('Disconnecting socket...');\n  if (socket) socket.disconnect();\n};\nexport const sendMessageInRoom = (room, message) => {\n  if (socket && room) {\n    socket.emit(\"sendMessage\", {\n      room,\n      message\n    });\n  }\n};\nexport const receiveMessageAndDisplay = () => {\n  socket.on(\"receiveMessage\", data => {});\n};","map":{"version":3,"sources":["F:/Portfolio projects/Chatio v2/client/src/utils/SocketFunctions.js"],"names":["socketClient","socket","messagePool","ENDPOINT","initiateSocket","room","emit","disconnectSocket","console","log","disconnect","sendMessageInRoom","message","receiveMessageAndDisplay","on","data"],"mappings":"AACA,OAAOA,YAAP,MAAyB,kBAAzB;AACA,IAAIC,MAAJ;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AAEA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAS;AACpCJ,EAAAA,MAAM,GAAGD,YAAY,CAACG,QAAD,CAArB;;AACA,MAAGE,IAAI,IAAIJ,MAAX,EAAkB;AACdA,IAAAA,MAAM,CAACK,IAAP,CAAY,UAAZ,EAAwBD,IAAxB;AACH;AACH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAG,MAAM;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACA,MAAGR,MAAH,EAAWA,MAAM,CAACS,UAAP;AACd,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAG,CAACN,IAAD,EAAOO,OAAP,KAAkB;AAC/C,MAAGX,MAAM,IAAII,IAAb,EAAkB;AACdJ,IAAAA,MAAM,CAACK,IAAP,CAAY,aAAZ,EAA2B;AAACD,MAAAA,IAAD;AAAOO,MAAAA;AAAP,KAA3B;AACH;AACJ,CAJM;AAMP,OAAO,MAAMC,wBAAwB,GAAG,MAAK;AACrCZ,EAAAA,MAAM,CAACa,EAAP,CAAU,gBAAV,EAA6BC,IAAD,IAAQ,CAEnC,CAFD;AAGH,CAJE","sourcesContent":["\r\nimport socketClient from 'socket.io-client'\r\nlet socket\r\nlet messagePool = [];\r\nconst ENDPOINT = \"http://127.0.0.1:3001\"\r\n\r\nexport const initiateSocket = (room) =>{\r\n   socket = socketClient(ENDPOINT);\r\n   if(room && socket){\r\n       socket.emit(\"joinRoom\", room);\r\n   }\r\n}\r\n\r\nexport const disconnectSocket = () => {\r\n    console.log('Disconnecting socket...');\r\n    if(socket) socket.disconnect();\r\n}\r\n\r\nexport const sendMessageInRoom = (room, message) =>{\r\n    if(socket && room){\r\n        socket.emit(\"sendMessage\", {room, message});\r\n    }\r\n} \r\n\r\nexport const receiveMessageAndDisplay = () =>{\r\n        socket.on(\"receiveMessage\", (data)=>{\r\n           \r\n        })\r\n    }\r\n"]},"metadata":{},"sourceType":"module"}